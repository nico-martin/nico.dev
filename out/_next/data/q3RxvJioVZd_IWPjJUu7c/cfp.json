{"pageProps":{"pageData":{"papers":[{"title":"Look ma, no hands! Multimodal AI-Agents in the browser","content":[{"title":"basic","text":"In this talk, we’ll explore how to build multimodal AI agents that understand voice, interpret images, hold short-term memory, and respond intelligently - all running entirely in the browser. No server, no cloud APIs, and no installation. Using modern tools like WebGPU and WebAssembly, we’ll see how far the open web has come in enabling real-time, privacy-preserving AI experiences."}],"notes":"I have a set of pretty cool demos that I can use to address various real-world use cases of AI in the browser. The idea is basically, that we utilize the capabilities of on-device LLMs to understand and directly address the needs of our users.\r\n\r\nTABLE OF CONTENT\r\n- onDevice ML/AI/LLM in the browser (WebLLM, Transformers.js)\r\n- LLM use-cases beyond chatbots: Understanding images, Tool calling, etc.\r\n- AI Agents\r\n\r\nTAKEAWAYS\r\nIn this talk, we will learn how LLMs can be used as a tool for complex use cases to significantly improve the user experience.\r\nFor this purpose, we will delve into topics such as AI agents, tool calling or RAG and learn how we can execute them directly in the browser. Running fully offline, without any LLM cloud-provider and privacy preserving by default!\r\n\r\nTARGET AUDIENCE\r\nDevelopers and decision-makers with an interest in new technologies and interesting use cases."},{"title":"Let’s build K.I.T.T. with JavaScript","content":[{"title":"normal","text":"In the 1982 TV series \"knight rider\", the idea of a talking, intelligent car was pure science fiction. Now, more than 40 years later, we have all the tools needed to bring this vision to life - right in the browser, using JavaScript. In this talk, we’ll combine AI techniques like Retrieval-Augmented Generation (RAG) and function calling with advanced browser APIs like WebBluetooth to create an AI agent with personality, memory, and autonomous decision-making abilities. Leveraging WebAssembly, WebGPU, and other cutting-edge browser technologies, this entire experience happens directly in the browser, running fully offline and privacy preserving by default!"},{"title":"short (450)","text":"In the TV series Knight Rider, the concept of an intelligent car was pure sci-fi. Over 40 years later, we now have the tools to bring it to life - purely in the browser. This talk explores combining AI techniques like RAG and function calling with advanced browser APIs (e.g., WebBluetooth) to create a browser-based AI agent with personality, memory, and autonomy, powered by WebAssembly and WebGPU - fully offline and privacy-preserving!"}],"notes":"Some years ago I build a couple of small robots that I could control with WebBluetooth and WebUSB: https://youtu.be/htwYbnD-1rs?si=RvemeW8R5H_8fumu&t=1522\r\nA little later, when generative AI came into the picture, I was made aware that we can run LLMs directly in the browser: https://youtu.be/jzs79Cxr-ag?si=R-FBl4yYUOemVPMu&t=1221\r\nIn this talk I want to combine those two things. But more than that I also have a set of pretty cool demos that I can use to address various real-world use cases of AI in the browser. So it's all about explaining an important and promising topic (AI agents) in an entertaining way (K.I.T.T.).\r\n\r\nTABLE OF CONTENT\r\n- onDevice ML/AI/LLM in the browser (WebLLM, Transformers.js)\r\n- LLM use-cases beyond chatbots: Retrieval Augmented Generation (RAG), Function calling\r\n- AI Agents\r\n- WebBluetooth: Communicate with hardware from the browser\r\n- Let's bring everything together with K.I.T.T:\r\n- - AI agent as the brain\r\n- - RAG as the memory\r\n- - Function calling to execute actions\r\n- - LLM for interaction with users\r\n- - WebBluetooth as the bridge between the browser and the device\r\n\r\nTAKEAWAYS\r\nIn this talk, we will learn how LLMs can be used as a tool for complex use cases to significantly improve the user experience, beyond classic chatbots.\r\nFor this purpose, we will delve into topics such as AI agents, function calling or RAG and learn how we can execute them directly in the browser. Running fully offline, without any LLM cloud-provider and privacy preserving by default!\r\n\r\nTARGET AUDIENCE\r\nDevelopers and decision-makers with an interest in new technologies and interesting use cases."},{"title":"From ML to LLM: on-device AI in the browser","content":[{"title":"Basic","text":"AI is the next big thing. Machine learning models are interpreting the world and generative AI is taking over more and more of our tasks. And this makes us increasingly dependent on the big AI providers. What if we could use all this magic directly on our devices? Maybe even directly in the web platform, the largest platform for applications that has ever existed?\r\nWith WebAssembly and WebGPU, we have the tools to make all this possible.\r\nIt's time to get ready for some unexpected examples of how to use AI in the browser!"},{"title":"Extended","text":"AI is the next big thing. Machine learning models are interpreting the world and generative AI is taking over more and more of our tasks. And this makes us increasingly dependent on the big AI providers. What if we could use all this magic directly on our devices? Maybe even directly in the web platform, the largest platform for applications that has ever existed?\r\nWith WebAssembly and WebGPU, we have the tools to make all this possible. We can use the complete range of browser APIs and input devices and combine them with existing, as well as with our own, self-trained, machine learning models. From simple image recognition to LLMs, all of that directly on our device in a web application!\r\nIt's time to get ready for some unexpected examples of how to use AI in the browser!"},{"title":"Supershort","text":"AI is the next big thing. ML is interpreting the world and AI is taking over more and more of our tasks. What if we could use all this magic directly in the browser? With WASM and WebGPU, we have the tools to make this possible. It’s time for some unexpected examples of how to use AI in the browser!"}],"notes":"In the past months I created a couple of really fun ML and AI demos.\r\nFrom simple image recognition (https://twitter.com/nic_o_martin/status/1607828831414484992) to complex Natural Language Processing tasks and LLMs (https://twitter.com/nic_o_martin/status/1761368183116611895) and even a complete RAG pipeline (https://x.com/nic_o_martin/status/1797865638062702856), thanks to WebAssembly and WebGPU, all of it can happen directly in the browser.\r\n\r\nMy goal is to demystify ML and generative AI and encurage developers to implement their own models into their applications instead of some paid backed service.\r\n\r\nStructure:\r\n- Introduction (why I started with ML)\r\n- What is ML/AI\r\n- How does ML work (simplified)\r\n- My own image recognition examples\r\n- My own audio recognition examples\r\n- LLMs in the browser (with examples)\r\n- Why the browser (and the current standing of the browser ecosystem)"},{"title":"Next-Gen Authentication: enhance Security and UX with Passkeys","content":[{"title":"Normal","text":"A lot has happened on the web in the last few decades. A simple idea for data exchange has become the largest application platform in human history.\r\nBut one thing has always remained the same. The good old username/password screen.\r\n\r\nAlthough we have long been aware of the problems with passwords, we have only ever dealt with the symptoms. With passkeys and the webauthn standard, this will finally change.\r\n\r\nIn this session we will get an overview of passkeys, the problems they solve and most importantly how we can set them up in our Webapplication to provide a better and more secure authentication experience for our users."},{"title":"WordPress","text":"A lot has happened on the web in the last few decades. A simple idea for data exchange has become the largest application platform in human history.\r\nBut one thing has always remained the same. The good old username/password screen.\r\n\r\nAlthough we have long been aware of the problems with passwords, we have only ever dealt with the symptoms. With passkeys and the webauthn standard, this will finally change.\r\n\r\nIn this session we will get an overview of passkeys, the problems they solve and most importantly how we can set them up in our WordPress site to provide a better and more secure authentication experience for our users."},{"title":"Enhanced","text":"A lot has happened on the web in the last few decades. A simple idea for data exchange has become the largest application platform in human history.\r\nBut one thing has always remained the same. The good old username/password screen.\r\nAlthough we have long been aware of the problems with passwords, we have only ever dealt with the symptoms. With passkeys and the webauthn standard, this will finally change.\r\nMost browsers already support this new passwordless authentication mechanism, which allows users to auhtenticate with FaceID, TouchID, Windows Hello or Android biometric authentication. Therefore in this session we will look into some of the Browser APIs (WebAuthn, Credential Management API) and the backend structure that we need to provide a better and more secure authentication experience for our users.\r\n"}],"notes":"Since years we are using a combination of username and password to authenticate on the web. But this comes with a lot of flaws:\r\n- The same Passwords are often used on multiple sites\r\n- Passwords are often far too easy to crack\r\n- Passwords (or hashes of it) need to be stored on the server\r\n\r\nTo solve those problem, we often had to compromise on the user experience.\r\nWith passkeys and the WebAuthn Standard we are finally able to provide a better and more secure authentication experience for our users.\r\n\r\nTable of contents:\r\n- Why are passwords bad\r\n- How can passkeys solve those problems\r\n- How do passkeys, WebAuthn and the Credential Management API work\r\n- How can we implement passkeys in our Webapp\r\n\r\nI think this is an extremely important topic for anyone who wants to authenticate their users on the web."},{"title":"Beyond the browser – how to talk with robots","content":[{"title":"Basic","text":"With Progressive Web Apps and the Project-FUGU, the web is increasingly becoming a full-fledged platform for complex applications.\r\nBut what has been missing for a long time is the possibility to communicate with devices in the periphery. With WebBluetooth, WebUSB and a whole bunch of new APIs, this gap has now been closed, which makes it possible to interact with light bulbs, fitness trackers, experimental input devices or even DIY toy cars directly via a web application.\r\nSounds pretty cool, and it is. But those who are used to open and transparent transmission protocols will inevitably come up against a few hurdles - the story of a frontend developer dipping his toes into the world of robots."},{"title":"800+","text":"With Progressive Web Apps and the Project-FUGU, the web is increasingly becoming a full-fledged platform for complex applications.\r\nBut what has been missing for a long time is the possibility to communicate with devices in the periphery. With WebBluetooth, WebUSB and a whole bunch of new APIs, this gap has now been closed, which makes it possible to interact with light bulbs, fitness trackers, experimental input devices or even DIY toy cars directly via a web application, connected to all the great APIs we have in the browser from Device Orientation to on device Machine Learning.\r\nSounds pretty cool, and it is. But those who are used to open and transparent transmission protocols will inevitably come up against a few hurdles - the story of a frontend developer dipping his toes into the IOT world."},{"title":"Short","text":"With Progressive Web Apps and the Project-FUGU we now have a set of browser APIs that finally close the gap between the browser and devices around us. Sounds pretty cool, and it is. But those who are used to open and transparent transmission protocols will inevitably come up against a few hurdles - the story of a frontend developer dipping his toes into the world of robots."},{"title":"Supershort","text":"With Progressive Web Apps and the Project-FUGU we now have a set of browser APIs that finally close the gap between the browser and devices around us. Sounds pretty cool, and it is - the story of a frontend developer dipping his toes into the world of hardware development."},{"title":"Supersupershort","text":"In the last years the web got a set of new browser APIs that finally close the gap between the browser and devices around us. Sounds pretty cool, and it is - the story of a frontend developer dipping his toes into the world of robots."},{"title":"Short-React","text":"With Progressive Web Apps and the Project-FUGU we now have a set of browser APIs that finally close the gap between the browser and devices around us and allow our React application to control toy cars, LEDs and all kinds of other hardware devices. Sounds pretty cool, and it is. But those who are used to open and transparent transmission protocols will inevitably come up against a few hurdles - the story of a React developer dipping his toes into the world of robots."}],"notes":"I have a whole bunch of pretty cool hardware demos to showcase the apis. Therefore I think this talk is a perfect mixture of insights into new technologies and creative experimenting.\r\nThere is something for everyone. You don't have to be too deep in JavaScript to be inspired.\r\n\r\nSome threads of demos I've built for this talk (they also include all the github links):\r\nhttps://twitter.com/nic_o_martin/status/1517629565081985024 \r\nhttps://twitter.com/nic_o_martin/status/1416120631842717704 \r\nhttps://twitter.com/nic_o_martin/status/1443103977772666882 \r\nhttps://twitter.com/nic_o_martin/status/1438258873140486145 "},{"title":"The “F” in Machine Learning stands for fun","content":[{"title":"Basic","text":"Machine learning is seen by many as the next step in artificial intelligence towards a new stage of human evolution. And thus helps us find new approaches to solving real-world problems. Phew... That sounds complex… And how is that supposed to be fun?\r\nWell, in addition to the big issues of our time, it is ultimately just another tool that we can play with. Get ready for some unexpected examples of how to get started with machine learning in the browser!"},{"title":"Supershort","text":"Machine learning is a serious problem-solving tool, but it’s also incredibly fun to play with. Get ready for some unexpected examples of how to get started with machine learning in the browser! "},{"title":"500+","text":"Machine learning is seen by many as the next step in artificial intelligence towards a new stage of human evolution. And thus helps us find new approaches to solving real-world problems. Phew... That sounds complex… And how is that supposed to be fun?\r\nWell, in addition to the big issues of our time, it is ultimately just another tool that we can play with. While it is important to first understand the core concepts of machine learning, we can quickly go way beyond that. Get ready for some unexpected examples of how to get started with machine learning in the browser!"},{"title":"800+","text":"Machine learning is seen by many as the next step in artificial intelligence towards a new stage of human evolution. And thus helps us find new approaches to solving real-world problems. Phew... That sounds complex… And how is that supposed to be fun?\r\nWell, in addition to the big issues of our time, it is ultimately just another tool that we can play with. While it is important to first understand the core concepts of machine learning, we can quickly go way beyond that. We can use the complete range of browser APIs and input devices and combine them with existing machine learning models as well as with our own, self-trained machine learning models directly in our web application using the latest advancements to access the GPU. Get ready for some unexpected examples of how to get started with machine learning in the browser."},{"title":"300-","text":"Machine learning is a serious problem-solving tool that's also incredibly fun to play with. Get started in your browser with unexpected examples like building a chatbot or experimenting with image recognition – it's a thrilling field full of innovation and discovery!"},{"title":"useMachineLearning… and have fun with it!","text":"Machine learning is seen by many as the next step in artificial intelligence towards a new stage of human evolution. And thus helps us find new approaches to solving real-world problems. Phew... That sounds complex… And how is that supposed to be fun?\r\nWell, in addition to the big issues of our time, it is ultimately just another tool that we can play with. While it is important to first understand the core concepts of machine learning, we can quickly go way beyond that. Get ready for some unexpected examples of how to get started with machine learning in your React application!"}],"notes":"For a long time, I didn't really dare to tackle the topic of machine learning because I thought it was super difficult and only something for geniuses.\r\nBut if you understand the few basics, you can do really cool and creative things with it. So my talk is mainly about lowering the barriers to entry and inspiring with creative ideas. Coding should be fun!\r\nNotes 2\r\nSo it's all about creative use cases for machine learning, but of course I also want to get to grips with the basics and delve into a few complex topics around ML and AI.\r\nReact Notes\r\nIn the past months I created a couple of fun little projects where I was using Machine Learning with TensorflowJS to solve my problems. And since React is my framework of choice, I have written a collection of hooks that can help any developer get started.\r\n\r\nSo it's all about creative use cases for machine learning, but of course I also want to get to grips with the basics and delve into a few complex topics around ML and AI.\r\n\r\nStructure:\r\n- Introduction (why I started with ML)\r\n- What is ML\r\n- How does ML work (simplified)\r\n- My own image recognition examples\r\n- My own audio recognition examples\r\n- Why the browser (and the current standing of the browser ecosystem)"},{"title":"Superwebapps – Rethinking desktop applications with progressive web apps","content":[{"title":"Short","text":"In this talk, we will focus on some of the new and exciting browser capabilities that allow developers to build fully-featured desktop applications on the web. Of course, including tangible examples and an outlook on the browser roadmap."},{"title":"Long","text":"Progressive web apps describe a whole new set of browser features that enable completely new ways of interacting with web applications.\r\nWhile originally intended as an alternative to mobile apps, we are seeing more and more desktop apps that rely on the web platform. Photoshop, Visual Studio Code, Squoosh, Clipchamp and the whole Google Office Suite are just a few examples of a growing number of completely web-based desktop applications.\r\nIn this talk, we will focus on some of the new and exciting browser capabilities that allow us to create rich web applications that make our daily lives easier. Of course, including tangible examples and an outlook on the browser roadmap."},{"title":"800+","text":"Progressive web apps describe a whole new set of awesome  browser features that enable completely new ways of interacting with applications whitout the need of intalling anything right through the browser.\r\nWhile originally intended as an alternative to mobile apps, we are seeing more and more desktop apps that rely on the web platform. Photoshop, Visual Studio Code, Squoosh, Clipchamp and the whole Google Office Suite are just a few examples of a growing number of completely web-based desktop applications.\r\nIn this talk, we will focus on some of the new and exciting browser capabilities (linke the File Handling API, File System Access API, Local Font Access, etc.) that allow us to create rich web applications that make our daily lives easier. Of course, including tangible examples and an outlook on the browser roadmap."},{"title":"React","text":"Progressive web apps describe a whole new set of browser features that enable completely new ways of interacting with web applications.\r\nWhile originally intended as an alternative to mobile apps, we are seeing more and more desktop apps that rely on the web platform. Photoshop, Visual Studio Code, Squoosh, Clipchamp and the whole Google Office Suite are just a few examples of a growing number of completely web-based desktop applications.\r\nIn this talk, we will focus on some of the new and exciting browser capabilities that allow us to create powerful React applications that make our daily lives easier. Of course, including tangible examples and an outlook on the browser roadmap."},{"title":"Deutsch","text":"Progressive Web-Apps beschreiben eine ganze Reihe neuer Browserschnittstellen, die völlig neue Möglichkeiten der Interaktion mit Webanwendungen ermöglichen.\r\nUrsprünglich als Alternative zu Mobile-Apps gedacht, gibt es immer mehr Desktop-Anwendungen, die komplett auf die Webplattform stetzen. Photoshop, Visual Studio Code, Squoosh, Clipchamp und die gesamte Google Office Suite sind nur einige Beispiele für eine wachsende Zahl vollständig webbasierter Desktop-Anwendungen.\r\nIn diesem Talk werden wir uns auf einige der neuen und aufregenden Browserfunktionen konzentrieren, die es uns ermöglichen, umfangreiche Webanwendungen zu erstellen, die unser tägliches Leben einfacher machen. Natürlich inklusive ganz konkreter Beispiele und einem Ausblick auf die Browser-Roadmap."}],"notes":"I do have some side-project, where I experimented with the APIs:\r\n\r\nhttps://md.nico.dev/ - https://github.com/nico-martin/markdown-editor/\r\nhttps://tiptoi-manager.nico.dev/ - https://github.com/nico-martin/tiptoi-manager/\r\nhttps://ytaud.io/ - https://github.com/nico-martin/yt-audio\r\n\r\nStructure of the talk\r\n- md.edit - a superwebapp!\r\n- new Browser features:\r\n- - Add to homescreen\r\n- - Offline\r\n- - File System Access\r\n- - File Handling\r\n- - Project FUGU\r\n- - Local Font Access\r\n- Demos"}],"about":[{"title":"2024 long","text":"Nico Martin is a Machine Learning Engineer with focus on WebML at 🤗 Hugging Face and Google Developer Expert in AI and Web Technologies from Switzerland.\r\n\r\nHis expertise spans two critical domains: building robust web applications and implementing machine learning solutions. This unique combination allows him to create WebML experiences that make AI accessible directly through web browsers. At Hugging Face, he develops tools and platforms that simplify how developers integrate machine learning models into web environments.\r\nBeyond his technical work, Nico is an active contributor to the developer community. Through workshops, articles, and conference presentations, he helps bridge the knowledge gap between traditional web development and modern AI applications. His practical approach to complex technologies has made him a trusted voice in both the web development and machine learning communities."},{"title":"2024 short","text":"Nico Martin is a Machine Learning Engineer with focus on WebML at 🤗 Hugging Face and Google Developer Expert in AI and Web Technologies from Switzerland.\r\nHe specializes in making AI accessible through web browsers, developing tools that simplify ML integration for developers. Nico actively shares his expertise through workshops, articles, and conference presentations, bridging the gap between web development and machine learning communities."},{"title":"Creative Coder Aity","text":"Nico Martin is a self-taught web-developer and Google Developer Expert in Web Technologies and AI/ML from Switzerland.\r\nCreative coding and testing the limits of the browser has always been his passion. And he shares this enthusiasm whenever possible in workshops, articles or talks."},{"title":"V4 creative coder","text":"Nico Martin is a self-taught web-developer and Google Developer Expert in Web Technologies from Switzerland.\r\nWhile working as a freelance frontend consultant, creative coding has always been his passion. And he shares this enthusiasm whenever possible in workshops, articles or talks."},{"title":"V4 creative coder - long","text":"Nico Martin is a self-taught web-developer and Google Developer Expert in Web Technologies from Switzerland.\r\nAs founder of the digital agency \"say hello\", he learned early on how to use the web platform to efficiently meet the needs of customers. Furthermore, he has contributed his know-how as a frontend development freelancer and consultant in various large projects, while constantly experimenting with modern browser technologies and sharing his learnings in workshops, articles or at conferences."}],"links":[{"title":"Website","url":"https://nico.dev/"},{"title":"Talks","url":"https://nico.dev/talks"},{"title":"Mastodon","url":"https://mas.to/@nicomartin"},{"title":"Twitter","url":"https://twitter.com/nic_o_martin"},{"title":"Bluesky","url":"https://bsky.app/profile/nico.dev"},{"title":"LinkedIn","url":"https://www.linkedin.com/in/nicodotdev/"},{"title":"Dev.to","url":"https://dev.to/nicomartin"},{"title":"Github","url":"https://github.com/nico-martin"},{"title":"WordPress","url":"https://profiles.wordpress.org/nico_martin/"}],"portrait":["https://uploads.nico.dev/img/nico-martin-portrait.jpg","https://uploads.nico.dev/img/nico-martin-portrait-square.jpg","https://uploads.nico.dev/img/nico-martin-full.jpg"]}},"__N_SSG":true}